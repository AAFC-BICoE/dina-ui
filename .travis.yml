env:
  global:
    - CC_TEST_REPORTER_ID=1adf2f4c3169570205e0702dc0166037e02880f128a2bfd74d2f6102f89f699f
language: node_js
node_js:
  - "12"
cache:
  yarn: true
before_install:
  # Setup yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.0
  - export PATH=$HOME/.yarn/bin:$PATH
before_script:
  # Setup the test coverage reporter.
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
script:
  # Run tests in all packages:
  - yarn test:coverage;
  # Make sure the apps can be built:
  - yarn workspace seqdb-ui build
  - yarn workspace dina-ui build
after_script:
  # Format common-ui coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.common-ui.json packages/common-ui/coverage/lcov.info
  # Format seqdb-ui coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.seqdb-ui.json packages/seqdb-ui/coverage/lcov.info
  # Format dina-ui coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.dina-ui.json packages/dina-ui/coverage/lcov.info
  # Sum coverage parts into coverage/codeclimate.json
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 3
  # Upload coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi
