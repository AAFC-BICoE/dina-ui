// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions infixQuery attribute 1`] = `
Object {
  "match": Object {
    "data.attribute.materialSampleName.infix": Object {
      "query": "searchValue",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions infixQuery relationship 1`] = `
Object {
  "nested": Object {
    "path": "included",
    "query": Object {
      "bool": Object {
        "must": Array [
          Object {
            "match": Object {
              "included.attributes.dwcRecordNumber.infix": Object {
                "query": "searchValue",
              },
            },
          },
          Object {
            "term": Object {
              "included.type": "collecting-event",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions prefixQuery attribute (not optimized) 1`] = `
Object {
  "prefix": Object {
    "data.attribute.materialSampleName": Object {
      "case_insensitive": true,
      "value": "searchValue",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions prefixQuery attribute (not optimized, keyword support) 1`] = `
Object {
  "prefix": Object {
    "data.attribute.materialSampleName.keyword": Object {
      "case_insensitive": true,
      "value": "searchValue",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions prefixQuery attribute (optimized) 1`] = `
Object {
  "prefix": Object {
    "data.attribute.materialSampleName.prefix": Object {
      "case_insensitive": true,
      "value": "searchValue",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions prefixQuery relationship (not optimized) 1`] = `
Object {
  "nested": Object {
    "path": "included",
    "query": Object {
      "bool": Object {
        "must": Array [
          Object {
            "prefix": Object {
              "included.attributes.dwcRecordNumber": Object {
                "case_insensitive": true,
                "value": "searchValue",
              },
            },
          },
          Object {
            "term": Object {
              "included.type": "collecting-event",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions prefixQuery relationship (not optimized, keyword support) 1`] = `
Object {
  "nested": Object {
    "path": "included",
    "query": Object {
      "bool": Object {
        "must": Array [
          Object {
            "prefix": Object {
              "included.attributes.dwcRecordNumber.keyword": Object {
                "case_insensitive": true,
                "value": "searchValue",
              },
            },
          },
          Object {
            "term": Object {
              "included.type": "collecting-event",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions prefixQuery relationship (optimized) 1`] = `
Object {
  "nested": Object {
    "path": "included",
    "query": Object {
      "bool": Object {
        "must": Array [
          Object {
            "prefix": Object {
              "included.attributes.dwcRecordNumber.prefix": Object {
                "case_insensitive": true,
                "value": "searchValue",
              },
            },
          },
          Object {
            "term": Object {
              "included.type": "collecting-event",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions suffixQuery attribute 1`] = `
Object {
  "prefix": Object {
    "data.attribute.materialSampleName.prefix_reverse": "eulavhcraes",
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Partial matching query helper functions suffixQuery relationship 1`] = `
Object {
  "nested": Object {
    "path": "included",
    "query": Object {
      "bool": Object {
        "must": Array [
          Object {
            "prefix": Object {
              "included.attributes.dwcRecordNumber.prefix_reverse": "eulavhcraes",
            },
          },
          Object {
            "term": Object {
              "included.type": "collecting-event",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions betweenQuery tests 1`] = `
Object {
  "range": Object {
    "data.attribute.numberExample": Object {
      "gte": 2,
      "lte": 5,
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions betweenQuery tests 2`] = `
Object {
  "range": Object {
    "data.attribute.materialSampleName.keyword_numeric": Object {
      "gte": "Test100",
      "lte": "Test200",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions betweenQuery tests 3`] = `
Object {
  "nested": Object {
    "path": "included",
    "query": Object {
      "bool": Object {
        "must": Array [
          Object {
            "range": Object {
              "included.attributes.dwcRecordNumber": Object {
                "gte": 10.5,
                "lte": 293,
              },
            },
          },
          Object {
            "term": Object {
              "included.type": "collecting-event",
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions existsQuery 1`] = `
Object {
  "exists": Object {
    "field": "fieldTest",
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 1`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2005-09-23",
                "lte": "2005-09-23",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2023-01-01",
                "lte": "2023-01-01",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 2`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2005-09-23",
                "lte": "2005-09-23",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2023-01-01",
                "lte": "2023-01-01",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 3`] = `
Object {
  "bool": Object {
    "must_not": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2005-09-23",
                "lte": "2005-09-23",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 4`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2005-09-23",
                "lte": "2005-09-23",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2023-01-01",
                "lte": "2023-01-01",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 5`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2005-09-23",
                "lte": "2005-09-23",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2023-01-01",
                "lte": "2023-01-01",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 6`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 7`] = `Object {}`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inDateQuery 8`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "1998-05-19",
                "lte": "1998-05-19",
                "time_zone": "UTC",
              },
            },
          },
          Object {
            "range": Object {
              "fieldTest": Object {
                "format": "yyyy-MM-dd",
                "gte": "2005-09-23",
                "lte": "2005-09-23",
                "time_zone": "UTC",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 1`] = `
Object {
  "bool": Object {
    "must": Object {
      "terms": Object {
        "fieldTest.keyword": Array [
          "test1",
          "test2",
          "TEST3",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 2`] = `
Object {
  "bool": Object {
    "must": Object {
      "terms": Object {
        "fieldTest": Array [
          "test1",
          "test2",
          "TEST3",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 3`] = `
Object {
  "bool": Object {
    "must_not": Object {
      "terms": Object {
        "fieldTest.keyword": Array [
          "test1",
          "test2",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 4`] = `
Object {
  "bool": Object {
    "must": Object {
      "terms": Object {
        "fieldTest.keyword": Array [
          "test1",
          "test2",
          "test3",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 5`] = `
Object {
  "bool": Object {
    "must": Object {
      "terms": Object {
        "fieldTest.keyword": Array [
          "test1",
          "test2",
          "test3",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 6`] = `
Object {
  "bool": Object {
    "must": Object {
      "terms": Object {
        "fieldTest.keyword": Array [
          "TEST1",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 7`] = `Object {}`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inQuery 8`] = `
Object {
  "bool": Object {
    "must": Object {
      "terms": Object {
        "fieldTest.keyword": Array [
          "test1",
          "test2",
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inRangeQuery 1`] = `
Object {
  "bool": Object {
    "should": Array [
      Object {
        "range": Object {
          "fieldTest": Object {
            "gte": "1998-05-19",
            "lte": "1998-05-19",
          },
        },
      },
      Object {
        "range": Object {
          "fieldTest": Object {
            "gte": "2023-03-02",
            "lte": "2023-03-02",
          },
        },
      },
    ],
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 1`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test1",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test2",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "TEST3",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 2`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest": Object {
                "case_insensitive": true,
                "value": "test1",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest": Object {
                "case_insensitive": true,
                "value": "test2",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest": Object {
                "case_insensitive": true,
                "value": "TEST3",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 3`] = `
Object {
  "bool": Object {
    "must_not": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test1",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test2",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 4`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test1",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test2",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test3",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 5`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test1",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test2",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test3",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 6`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "TEST1",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 7`] = `Object {}`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions inTextQuery 8`] = `
Object {
  "bool": Object {
    "must": Object {
      "bool": Object {
        "minimum_should_match": 1,
        "should": Array [
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test1",
              },
            },
          },
          Object {
            "term": Object {
              "fieldTest.keyword": Object {
                "case_insensitive": true,
                "value": "test2",
              },
            },
          },
        ],
      },
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions includedTypeQuery 1`] = `
Object {
  "term": Object {
    "included.type": "parentTest",
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions rangeQuery 1`] = `
Object {
  "range": Object {
    "fieldTest": Object {
      "lt": 500,
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions termQuery 1`] = `
Object {
  "term": Object {
    "fieldTest.keyword": "valueToMatch",
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions termQuery 2`] = `
Object {
  "term": Object {
    "fieldTest": "valueToMatch",
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions wildcard 1`] = `
Object {
  "wildcard": Object {
    "fieldTest": Object {
      "case_insensitive": true,
      "value": "*valueToMatch*",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality Query helper functions wildcard 2`] = `
Object {
  "wildcard": Object {
    "fieldTest.keyword": Object {
      "case_insensitive": true,
      "value": "*valueToMatch*",
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyGroupFilters Multiple groups 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
        Object {
          "terms": Object {
            "data.attributes.group.keyword": Array [
              "aafc",
              "cnc",
              "seqdb",
            ],
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyGroupFilters No groups 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyGroupFilters Single group 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
        Object {
          "term": Object {
            "data.attributes.group.keyword": "aafc",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyPagination Pagination is correctly applied to query 1`] = `
Object {
  "from": 0,
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "size": 25,
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyPagination Pagination is correctly applied to query 2`] = `
Object {
  "from": 100,
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "size": 100,
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyRootQuery Boolean logic exists, also contains should logic, include the must match minimum. 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "minimum_should_match": 1,
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
      "should": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyRootQuery Boolean logic exists, move it properly to it's own boolean section. 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applyRootQuery No boolean logic exists, just return the query as is. 1`] = `
Object {
  "query": Object {},
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Attempting to sort on a column that does not exist 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Basic sorting is correctly applied to the query 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn1.keyword": Object {
        "order": "desc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Basic sorting is correctly applied to the query 2`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn1.keyword": Object {
        "order": "asc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Basic sorting is correctly applied to the query 3`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn1.keyword": Object {
        "order": "asc",
      },
    },
    Object {
      "data.attributes.testColumn2": Object {
        "order": "desc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules No sorting to be performed, leave query the same without adding anything. 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Relationship sorting query generation 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn4": Object {
        "nested": Object {
          "filter": Object {
            "term": Object {
              "included.type": "relationshipType1",
            },
          },
          "path": "included",
        },
        "order": "desc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Relationship sorting query generation 2`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn4": Object {
        "nested": Object {
          "filter": Object {
            "term": Object {
              "included.type": "relationshipType1",
            },
          },
          "path": "included",
        },
        "order": "desc",
      },
    },
    Object {
      "data.attributes.testColumn5.keyword": Object {
        "nested": Object {
          "filter": Object {
            "term": Object {
              "included.type": "relationshipType2",
            },
          },
          "path": "included",
        },
        "order": "asc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Relationship sorting query generation 3`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn1.keyword": Object {
        "order": "asc",
      },
    },
    Object {
      "data.attributes.testColumn2": Object {
        "order": "desc",
      },
    },
    Object {
      "data.attributes.testColumn4": Object {
        "nested": Object {
          "filter": Object {
            "term": Object {
              "included.type": "relationshipType1",
            },
          },
          "path": "included",
        },
        "order": "desc",
      },
    },
    Object {
      "data.attributes.testColumn5.keyword": Object {
        "nested": Object {
          "filter": Object {
            "term": Object {
              "included.type": "relationshipType2",
            },
          },
          "path": "included",
        },
        "order": "asc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Sorting on columns without id 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "data.attributes.testColumn6.keyword": Object {
        "nested": Object {
          "filter": Object {
            "term": Object {
              "included.type": "relationshipType2",
            },
          },
          "path": "included",
        },
        "order": "desc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySortingRules Strings as column definitions 1`] = `
Object {
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
  "sort": Array [
    Object {
      "testColumn3": Object {
        "order": "asc",
      },
    },
  ],
}
`;

exports[`QueryBuilderElasticSearchExport functionality applySourceFiltering Ensure all source filtering are being applied to the query 1`] = `
Object {
  "_source": Object {
    "includes": Array [
      "data.id",
      "data.type",
      "data.relationships",
      "data.attributes.testColumn1",
      "data.attributes.includeThis1",
      "data.attributes.includeThis2",
      "data.attributes.testColumn2",
      "data.attributes.includeThis3",
      "data.attributes.testColumn4",
      "data.attributes.testColumn5",
      "data.attributes.testColumn6",
      "included.id",
      "included.type",
    ],
  },
  "query": Object {
    "bool": Object {
      "must": Array [
        Object {
          "term": Object {
            "data.attributes.materialSampleName.keyword": "Test",
          },
        },
        Object {
          "term": Object {
            "data.attributes.preparationDate": "2022-11-30",
          },
        },
      ],
    },
  },
}
`;

exports[`QueryBuilderElasticSearchExport functionality processResults Entity attributes only 1`] = `
Array [
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-29T14:25:55.864404Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "sample10-B",
        "materialSampleState": null,
        "materialSampleType": "CULTURE_STRAIN",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": null,
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [],
        },
        "storageUnitUsage": Object {},
      },
    },
    "id": "01919e87-58ef-7712-b32f-4ae08321e7e3",
    "included": undefined,
    "type": "material-sample",
  },
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-29T14:25:55.864404Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "sample10-C",
        "materialSampleState": null,
        "materialSampleType": "CULTURE_STRAIN",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": null,
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [],
        },
        "storageUnitUsage": Object {},
      },
    },
    "id": "01919e87-59a3-7c07-a4b9-a10f4ddd4a80",
    "included": undefined,
    "type": "material-sample",
  },
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-29T14:25:55.864404Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "sample10-D",
        "materialSampleState": null,
        "materialSampleType": "CULTURE_STRAIN",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": null,
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [],
        },
        "storageUnitUsage": Object {},
      },
    },
    "id": "01919e87-5a16-7653-83db-530af5cb4b7d",
    "included": undefined,
    "type": "material-sample",
  },
]
`;

exports[`QueryBuilderElasticSearchExport functionality processResults Relationships 1`] = `
Array [
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-29T14:25:55.864404Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "sample10-J",
        "materialSampleState": null,
        "materialSampleType": "CULTURE_STRAIN",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": null,
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [],
        },
        "storageUnitUsage": Object {},
      },
    },
    "id": "01919e87-5b71-7dff-921b-16c1ed4f011a",
    "included": undefined,
    "type": "material-sample",
  },
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-29T14:25:55.864404Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "sample10-A",
        "materialSampleState": null,
        "materialSampleType": "CULTURE_STRAIN",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": Object {
            "id": "2b349356-3ffb-46be-81f5-cb0d6ae9b4ef",
            "type": "collection",
          },
          "links": Object {
            "related": "/api/v1/material-sample/01919e87-58a0-70bd-8846-453100ccecb9/collection",
            "self": "/api/v1/material-sample/01919e87-58a0-70bd-8846-453100ccecb9/relationships/collection",
          },
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [],
        },
        "storageUnitUsage": Object {},
      },
    },
    "id": "01919e87-58a0-70bd-8846-453100ccecb9",
    "included": Object {
      "collection": Object {
        "attributes": Object {
          "code": "SeqDB",
          "name": "Sequence Database",
        },
        "id": "2b349356-3ffb-46be-81f5-cb0d6ae9b4ef",
        "type": "collection",
      },
    },
    "type": "material-sample",
  },
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-29T14:25:55.864404Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "sample10-C",
        "materialSampleState": null,
        "materialSampleType": "CULTURE_STRAIN",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": Object {
            "id": "01919f58-a9ea-7838-9737-7a0e54cdc41b",
            "type": "collection",
          },
          "links": Object {
            "related": "/api/v1/material-sample/01919e87-59a3-7c07-a4b9-a10f4ddd4a80/collection",
            "self": "/api/v1/material-sample/01919e87-59a3-7c07-a4b9-a10f4ddd4a80/relationships/collection",
          },
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [],
        },
        "storageUnitUsage": Object {},
      },
    },
    "id": "01919e87-59a3-7c07-a4b9-a10f4ddd4a80",
    "included": Object {
      "collection": Object {
        "attributes": Object {
          "code": "CNC",
          "name": "Canadian National Collection",
        },
        "id": "01919f58-a9ea-7838-9737-7a0e54cdc41b",
        "type": "collection",
      },
    },
    "type": "material-sample",
  },
]
`;

exports[`QueryBuilderElasticSearchExport functionality processResults To-many relationships 1`] = `
Array [
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-26T14:41:00.656734Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "SAMPLE_a",
        "materialSampleState": null,
        "materialSampleType": "WHOLE_ORGANISM",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": null,
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [
            Object {
              "id": "01919485-ed65-7a79-9080-91445b897ef4",
              "type": "project",
            },
          ],
          "links": Object {
            "related": "/api/v1/material-sample/01918f22-13a4-7f6d-894e-974bc1e14d23/projects",
            "self": "/api/v1/material-sample/01918f22-13a4-7f6d-894e-974bc1e14d23/relationships/projects",
          },
        },
        "storageUnitUsage": Object {
          "data": null,
        },
      },
    },
    "id": "01918f22-13a4-7f6d-894e-974bc1e14d23",
    "included": Object {
      "projects": Object {
        "attributes": Object {
          "name": "Project A",
        },
        "id": "01919485-ed65-7a79-9080-91445b897ef4",
        "type": "project",
      },
    },
    "type": "material-sample",
  },
  Object {
    "data": Object {
      "attributes": Object {
        "createdBy": "dina-admin",
        "createdOn": "2024-08-26T14:41:00.656734Z",
        "dwcOtherCatalogNumbers": null,
        "group": "aafc",
        "materialSampleName": "SAMPLE_c",
        "materialSampleState": null,
        "materialSampleType": "WHOLE_ORGANISM",
      },
      "relationships": Object {
        "assemblages": Object {
          "data": Array [],
        },
        "attachment": Object {
          "data": Array [],
        },
        "collectingEvent": Object {
          "data": null,
        },
        "collection": Object {
          "data": null,
        },
        "organism": Object {
          "data": Array [],
        },
        "parentMaterialSample": Object {},
        "preparationMethod": Object {
          "data": null,
        },
        "preparationProtocol": Object {},
        "preparationType": Object {
          "data": null,
        },
        "preparedBy": Object {
          "data": Array [],
        },
        "projects": Object {
          "data": Array [
            Object {
              "id": "01919485-ed65-7a79-9080-91445b897ef4",
              "type": "project",
            },
            Object {
              "id": "01919486-2f9a-7d1c-92f3-05a2542e2eea",
              "type": "project",
            },
          ],
          "links": Object {
            "related": "/api/v1/material-sample/01918f22-1687-7634-bcd3-cd56d493bf27/projects",
            "self": "/api/v1/material-sample/01918f22-1687-7634-bcd3-cd56d493bf27/relationships/projects",
          },
        },
        "storageUnitUsage": Object {
          "data": null,
        },
      },
    },
    "id": "01918f22-1687-7634-bcd3-cd56d493bf27",
    "included": Object {
      "projects": Array [
        Object {
          "attributes": Object {
            "name": "Project A",
          },
          "id": "01919485-ed65-7a79-9080-91445b897ef4",
          "type": "project",
        },
        Object {
          "attributes": Object {
            "name": "Project B",
          },
          "id": "01919486-2f9a-7d1c-92f3-05a2542e2eea",
          "type": "project",
        },
      ],
    },
    "type": "material-sample",
  },
]
`;
