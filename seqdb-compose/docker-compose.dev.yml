version: "3.7"
services:
  api:
    image: maven:3.6.3-jdk-8
    volumes:
      - "../repos/seqdb-api:/app"
      # Share host users:
      - "/etc/group:/etc/group:ro"
      - "/etc/passwd:/etc/passwd:ro"
      - "/etc/shadow:/etc/shadow:ro"
      # Use the host maven repository:
      - "~/.m2:/var/maven/.m2"
    ports:
      - "8080:8080" # app port
      - "5005:5005" # debug port
    # The maven container ignores the docker-compose "environment" field, so pass in variables in the command:
    command: >
      bash -c "
      mvn
      -f /app/pom.xml
      -Duser.home=/var/maven
      -Dspring-boot-maven-plugin.fork=true
      -Dspring-boot.run.jvmArguments=\"
        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
        -Dspring.datasource.url=jdbc:postgresql://database/seqdb?currentSchema=seqdb
        -Dspring.datasource.username=postgres
        -Dspring.datasource.password=p
        -Dspring.liquibase.user=postgres
        -Dspring.liquibase.password=p
        -Dspring.datasource.continue-on-error=true
        -Dspring.servlet.multipart.max-file-size=2GB
        -Dspring.servlet.multipart.max-request-size=2GB
        -Dimport-sample-accounts=true
      \"
      spring-boot:run
      "
  # Server that hot-reloads the UI source code:
  ui-dev-server:
    image: node:12.16.1
    volumes:
      - "../repos/dina-ui:/dina-ui"
    stop_signal: SIGINT
    command: >
      bash -c "
      yarn --cwd=/dina-ui/packages/seqdb-ui ;
      yarn --cwd=/dina-ui/packages/seqdb-ui next
      "
  # Front-end gateway that proxies URLs to the correct service:
  ui:
    image: caddy/caddy:2.0.0-rc.3
    volumes:
      - "../repos/dina-ui/packages/seqdb-ui/dev.Caddyfile:/etc/caddy/Caddyfile"
    environment:
      UI_DEV_SERVER_ADDRESS: ui-dev-server:3000
      API_ADDRESS: api:8080
