name: Java CI
on: [push]
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install

        # Lists all of the available tests and splits it into a number of groups.
      - id: set-test-chunks
        name: split tests into chunks
        run: echo "::set-output name=test-chunks::$(npx jest --listTests --json | jq -cM '[_nwise(length / 3 | floor)]')"

      - id: set-test-chunk-ids
        name: Set Chunk IDs
        run: echo "::set-output name=test-chunk-ids::$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')"
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}

  test-chunk:
    runs-on: ubuntu-latest
    name: test (chunk ${{ matrix.chunk }})
    needs:
      - setup
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs['test-chunk-ids']) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install
      - name: Run test chunk
        run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs npx jest
        env:
          CHUNKS: ${{ needs.setup.outputs['test-chunks'] }}

  build:
    runs-on: ubuntu-latest
    needs:
      - setup
      - test-chunk
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install
        run: |
          yarn install

      - name: Build UI project
        run: |
          yarn workspace dina-ui build

      - name: Extract Version
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          jq -r ".version" packages/dina-ui/package.json > version.txt

      - name: Store artifacts
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            packages/dina-ui/prod.Caddyfile
            packages/dina-ui/out
            Dockerfile
            version.txt

  push:
    name: Build Docker Image and Push to DockerHub
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - name: Download artifacts from build job
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Set VERSION_TAG ENV variable
        run: |
          echo "VERSION_TAG=$(cat version.txt)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: aafcbicoe/dina-ui:${{ env.VERSION_TAG }}
          provenance: false
