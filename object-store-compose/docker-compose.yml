version: "3.6"
services:
  os-database:
    image: postgres:9.6
    environment:
      POSTGRES_DB: objectstore
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p
    volumes:
      - ./objectstore-initdb.sql:/docker-entrypoint-initdb.d/1-objectstore-initdb.sql
  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    ports:
      - "9000:9000"
    command: server /data
  object-store-api-dev:
    image: maven:3.6.3-jdk-8
    volumes:
      - "../repos/objectstore-api:/app"
      # Use the host maven repository:
      - "$HOME/.m2:/root/.m2"
    ports:
      - "8080:8080"
    # The maven container ignores the docker-compose "environment" field, so pass in variables in the command:
    command: >
      bash -c "
      mvn
      -f /app/pom.xml
      -Dspring.datasource.url=jdbc:postgresql://os-database/objectstore?currentSchema=objectstore
      -Dspring.datasource.username=postgres
      -Dspring.datasource.password=p
      -Dspring.liquibase.user=postgres
      -Dspring.liquibase.password=p
      -Dspring.datasource.continue-on-error="true"
      -Dspring.servlet.multipart.max-file-size=2GB
      -Dspring.servlet.multipart.max-request-size=2GB
      -Dminio.host=minio
      -Dminio.port=9000
      -Dminio.accessKey=minio
      -Dminio.secretKey=minio123
      spring-boot:run
      "
  object-store-ui-dev:
    image: node:12.16.1
    volumes:
      - "../repos/dina-ui:/dina-ui"
    command: yarn --cwd=/dina-ui/packages/objectstore-ui next
  object-store-ui-gateway:
    image: abiosoft/caddy:1.0.3-no-stats
    volumes:
      - "./ui.Caddyfile:/etc/Caddyfile"
    environment:
      UI_ADDRESS: object-store-ui-dev:3000
      API_ADDRESS: object-store-api-dev:8080
    ports:
      - "80:2015"
